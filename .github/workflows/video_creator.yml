# .github/workflows/main.yml

name: Generate Song Videos

on:
  schedule:
    # Example: Run daily at 02:00 UTC (adjust as needed)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  generate-videos:
    runs-on: ubuntu-latest # Uses a Linux runner with FFmpeg typically available

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your preferred Python version

      # Authenticate to Google Cloud using Service Account Key JSON
      # This step assumes you have a GitHub Secret named GCP_SA_KEY
      # containing the JSON content of your service account key.
      - name: Authenticate to Google Cloud
        id: gcloud-auth
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: 'larq-453712 ' # <-- IMPORTANT: Replace with your GCP Project ID
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true # This sets the GOOGLE_APPLICATION_CREDENTIALS env var

      - name: Install FFmpeg (if not already on runner, or to ensure version)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          pip install moviepy pillow requests google-cloud-storage numpy

      - name: Run video generation script
        env:
          # The Python script should be able to pick this up if it's designed to,
          # or you can ensure the BUCKET_NAME variable inside your Python script is set correctly.
          # The provided Python script has BUCKET_NAME as a global variable.
          # Make sure it's set to "bebop_data" IN THE PYTHON SCRIPT ITSELF.
          # Setting it here is good practice if your script is adapted to read it.
          GCP_BUCKET_NAME_ENV: "bebop_data" # Example if script reads this env var
        run: python video_creator.py # <-- IMPORTANT: Replace with your Python script's filename

      # Optional: Add steps to clean up or notify upon completion/failure
      # For example, upload logs or send a notification.
